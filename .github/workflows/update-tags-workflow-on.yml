name: Update Tags - Workflow Run

on:
  release:
    types:
      - published
      - edited

  workflow_run:
    workflows:
      - GitHub Actions - Create New Release
    types:
      - completed
    branches:
      # - release/actions
      - create-release
      - main

jobs:
  Setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      release: ${{ steps.set-result.outputs.release }}
    steps:
      - name: Check tag name or workflow_run conclusion
        uses: actions/github-script@v6
        with:
          script: |
            const tagReg = /^v(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}-actions$/;
            const { payload, eventName } = context;
            const shouldCancelByWorkflowRun = eventName === 'workflow_run' && payload.workflow_run.conclusion !== 'success';
            console.log('shouldCancelByWorkflowRun', shouldCancelByWorkflowRun)
            /*
            if ( shouldCancelByWorkflowRun || ! tagReg.test( payload.release.tag_name ) ) ) {
              await github.rest.actions.cancelWorkflowRun( {
                ...context.repo,
                run_id: context.runId,
              } );
            }
            */

      - name: Get release artifact
        id: set-result
        if: ${{ github.event_name == 'workflow_run' }}
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const fs = require( 'fs' );

            const { data: { artifacts } } = await github.rest.actions.listWorkflowRunArtifacts( {
              ...context.repo,
              run_id: context.payload.workflow_run.id,
            } );
            const artifact = artifacts.find( ( el ) => el.name === 'release' );
            const download = await github.rest.actions.downloadArtifact( {
              ...context.repo,
              artifact_id: artifact.id,
              archive_format: 'zip',
            } );
            fs.writeFileSync( `/tmp/release.zip`, Buffer.from( download.data ) );
            await exec.exec( 'unzip', [ '/tmp/release.zip', '-d', '/tmp' ] );

            const release = fs.readFileSync( `/tmp/release.json`, 'utf8' );
            core.setOutput( 'release', release );

  UpdateTags:
    name: Update Tags
    runs-on: ubuntu-latest
    needs: Setup
    steps:
      - name: Checkout repository - release
        if: ${{ github.event_name == 'release' }}
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.release.tag_name }}

      - name: Checkout repository - workflow run
        if: ${{ github.event_name == 'workflow_run' }}
        uses: actions/checkout@v3
        with:
          ref: ${{ fromJSON(needs.Setup.outputs.release).tag_name }}

      - name: Prepare node
        uses: ./github-actions/prepare-node
        with:
          node-version: 16
          cache-dependency-path: ./packages/js/github-actions
          install-deps: "no"

      # - name: Commit bundle
      #   id: commit-bundle
      #   # https://api.github.com/users/github-actions%5Bbot%5D
      #   run: |
      #     cd ./packages/js/github-actions
      #     npm ci --ignore-scripts
      #     npm run build:update-version-tags
      #     cd -
      #     git config user.name github-actions[bot]
      #     git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      #     git rm -r .
      #     git checkout HEAD -- ./github-actions
      #     git add ./github-actions/update-version-tags/build
      #     git commit -m "Build the bundle of update-version-tags action."
      #     git push origin HEAD:refs/heads/tmp-gha-bundle
      #     git push -d origin tmp-gha-bundle
      #     echo "::set-output name=sha::$(git rev-parse HEAD)"

      - name: Commit bundle
        id: commit-bundle
        # https://api.github.com/users/github-actions%5Bbot%5D
        run: |
          cd ./packages/js/github-actions
          npm ci --ignore-scripts
          npm run build:update-version-tags
          echo "::set-output name=sha::$(git rev-parse HEAD)"

      - name: Run script to update version tags
        uses: ./github-actions/update-version-tags
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          sha: ${{ steps.commit-bundle.outputs.sha }}
          release: ${{ needs.Setup.outputs.release }}
